name: Docker Build Images

on:
  workflow_call:
    outputs:
      cache_key:
        description: "Docker Cache key"
        value: ${{ jobs.build_docker.outputs.cache_key }}
jobs:
  build_docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      cache_key: ${{ steps.cache_key.outputs.cache_key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: load-docker-cache
        name: Load Docker Cache
        uses: actions/cache@v1
        with:
          path: /tmp/tmp/docker-images
          key: /tmp/docker-images-${{ github.run_id }}
          restore-keys: |
            /tmp/docker-images-
      - name: Set cache key output
        id: cache_key
        run: |
          echo ::set-output name=cache_key::/tmp/docker-images-${{ github.run_id }}
      - name: Prime docker cache
        run: (docker load -i /tmp/tmp/docker-images/snapshot-builder.tar || true) && (docker load -i /tmp/tmp/docker-images/snapshot.tar || true)
      - name: Build dockerfile
        run: |
          docker build -t flyteorg/${{ github.event.repository.name }}:builder --target builder --cache-from=flyteorg/${{ github.event.repository.name }}:builder .
          docker build -t flyteorg/${{ github.event.repository.name }}:latest --cache-from=flyteorg/${{ github.event.repository.name }}:builder .

      - name: Tag and cache docker image
        run: mkdir -p /tmp/tmp/docker-images && docker save flyteorg/${{ github.event.repository.name }}:builder -o /tmp/tmp/docker-images/snapshot-builder.tar && docker save flyteorg/${{ github.event.repository.name }}:latest -o /tmp/tmp/docker-images/snapshot.tar
