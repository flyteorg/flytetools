name: End to End tests

on:
  workflow_call:
    inputs:
      priorities:
        description: "Priorities of tests to register (comma-separated)"
        required: true
        type: string
      cache_key:
        description: "Cache key for docker image"
        required: true
        type: string
jobs:
  list:
    runs-on: ubuntu-latest
    name: "Create a list of latest 2 release"
    steps:
      - uses: actions/checkout@v2
      - name: "Provide the list"
        id: create-list
        run: echo "::set-output name=releases::$( curl -sL "https://api.github.com/repos/flyteorg/flyte/releases" | jq -c '.[] | select(.prerelease==false) | .tag_name' | jq --slurp . | jq -c . | jq -c '.[0:2]')"
    outputs:
      releases: "${{ steps.create-list.outputs.releases }}"

  endtoend:
    name: End to End tests
    runs-on: ubuntu-latest
    needs: [list]
    strategy:
      matrix:
        version: "${{ fromJson(needs.list.outputs.releases) }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: unionai/flytectl-setup-action@v0.0.1
        name: Setup flytectl
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - id: load-docker-cache
        name: Load Docker Cache
        uses: actions/cache@v2
        with:
          path: /tmp/tmp/docker-images
          key: ${{ inputs.cache_key }}
      - name: Create Sandbox Cluster
        run: |
          cp /tmp/tmp/docker-images/snapshot.tar snapshot.tar
          flytectl config init
          flytectl sandbox start --source=$(pwd) --version=${{ matrix.version }}
      - name: Prime docker cache
        run: |
          flytectl sandbox exec -- docker load -i /root/snapshot.tar
      - name: Setup Flytekit
        run: |
          python -m pip install --upgrade pip
          pip install flytekit
          pip freeze
      - name: Register flytesnacks examples
        uses: unionai/flyte-register-action@v0.0.2
        with:
          flytesnacks: true
          project: flytesnacks
          version: "latest"
          domain: development
      - name: Pre Upgrade Tests
        if: ${{ github.event.repository.name == 'flyteadmin' }}
        env:
          PRIORITIES: "${{ inputs.priorities }}"
        run: |
          make end2end_execute
      - name: Upgrade Helm charts
        run: |
          flytectl sandbox exec -- helm repo add flyteorg https://flyteorg.github.io/flyte
          flytectl sandbox exec -- helm repo update
          flytectl sandbox exec -- helm upgrade flyte -n flyte --kubeconfig=/etc/rancher/k3s/k3s.yaml flyteorg/flyte -f /flyteorg/share/flyte/values.yaml --wait --set flyte.${{ github.event.repository.name }}.image.repository=flyteorg/${{ github.event.repository.name }},flyte.${{ github.event.repository.name }}.image.tag=latest
          flytectl sandbox exec -- k3s kubectl get pods -n flyte -oyaml
      - name: Post Upgrade Tests
        env:
          PRIORITIES: "${{ inputs.priorities }}"
        run: |
          make end2end_execute